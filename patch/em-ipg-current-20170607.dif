Index: sys/dev/e1000/if_em.c
===================================================================
--- sys/dev/e1000/if_em.c	(revision 319171)
+++ sys/dev/e1000/if_em.c	(working copy)
@@ -292,6 +292,7 @@
 
 static int	em_set_flowcntl(SYSCTL_HANDLER_ARGS);
 static int	em_sysctl_eee(SYSCTL_HANDLER_ARGS);
+static int	em_sysctl_tipg(SYSCTL_HANDLER_ARGS);
 static void	em_if_led_func(if_ctx_t ctx, int onoff);
 
 static int	em_get_regs(SYSCTL_HANDLER_ARGS);
@@ -944,6 +945,12 @@
 	    adapter, 0, em_sysctl_eee, "I",
 	    "Disable Energy Efficient Ethernet");
 
+	SYSCTL_ADD_PROC(device_get_sysctl_ctx(dev),
+	    SYSCTL_CHILDREN(device_get_sysctl_tree(dev)),
+	    OID_AUTO, "tipg", CTLTYPE_INT|CTLFLAG_RW,
+	    adapter, 0, em_sysctl_tipg, "I",
+	    "Transmit IPG register");
+
 	/*
 	** Start from a known state, this is
 	** important in reading the nvm and
@@ -4275,6 +4282,26 @@
 }
 
 static int
+em_sysctl_tipg(SYSCTL_HANDLER_ARGS)
+{
+	struct adapter *adapter = (struct adapter *)arg1;
+	int error, value;
+	u32 reg;
+
+	value = E1000_READ_REG(&adapter->hw, E1000_TIPG) & E1000_TIPG_IPGT_MASK;
+	error = sysctl_handle_int(oidp, &value, 0, req);
+	if (error || req->newptr == NULL)
+		return (error);
+
+	reg = E1000_READ_REG(&adapter->hw, E1000_TIPG);
+	reg &= ~E1000_TIPG_IPGT_MASK;
+	reg |= value & E1000_TIPG_IPGT_MASK;
+	E1000_WRITE_REG(&adapter->hw, E1000_TIPG, reg);
+
+	return (0);
+}
+
+static int
 em_sysctl_debug_info(SYSCTL_HANDLER_ARGS)
 {
 	struct adapter *adapter;
